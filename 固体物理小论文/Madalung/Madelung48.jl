# 语言: Julia
# https://julialang.org

"""

                      .::::.
                    .::::::::.
                   :::::::::::
                ..:::::::::::'
             '::::::::::::'
               .::::::::::
          '::::::::::::::..
               ..::::::::::::.
             ``::::::::::::::::
              ::::``:::::::::'        .:::.
             ::::'   ':::::'       .::::::::.
           .::::'      ::::     .:::::::'::::.
          .:::'       :::::  .:::::::::' ':::::.
         .::'        :::::.:::::::::'      ':::::.
        .::'         ::::::::::::::'         ``::::.
    ...:::           ::::::::::::'              ``::.
   ```` ':.          ':::::::::'                  ::::..
                      '.:::::'                    ':'````..
"""


# Nacl面心立方，48等分
function NaCl48(N::Int64)
    m₁, m₂, m₃, m₄, m₅ = 0.0, 0.0, 0.0, 0.0, 0.0
    N = N + (N & 0x1)
    e₁, N² = 1.0, N^2
    for n₁ ∈ 1:N-1
        e₁ = e₂ = -e₁
        n₁² = n₁^2
        # 坐标轴上: 1/8
        # 面对角线: 1/4 × 1/√2 = √2/8
        # 体对角线: 1/6 × 1/√3 = √3/18
        m₁ += (√2/8 + e₁ * (1/8 + √3/18)) / n₁
        m₄ += 1.0/ √(N² + 2n₁²)  # x = N, y = z, 1/4
        m₄ += e₁ / √(N² + n₁²)   # x = N, z = 0, 1/4
        m₅ += e₁ / √(2N² + n₁²)  # x = N, y = N, 1/8
        for n₂ ∈ n₁+1:N-1
            n₂² = n₂^2
            AB = n₁² + n₂²
            e₂ = -e₂
            e₃ = e₁ * e₂
            # 在三棱锥面上的原子, 1/2
            m₂ += e₃ / √(AB)       # z = 0
            m₂ += e₃ / √(AB + N²)  # x = N
            m₂ += e₂ / √(AB + n₁²) # x = y
            m₂ += e₁ / √(AB + n₂²) # y = z
            # 三棱锥内部的原子
            e₃ *= e₂
            for n₃ ∈ n₂+1:N-1
                e₃ = -e₃
                m₃ += e₃ / √(AB + n₃^2)
            end
        end
    end
    m₃ += m₄/4 + m₅/8 + (1 + √2/2 + √3/9)/16N
    return -48(m₁ + m₂/2 + m₃)
end


# CsCl简单立方, 48等分
function CsCl48(N::Int64)
    N = N + (N & 0x1)
    negative, positive, N² = 0.0, 0.0, N^2
    for n₁ ∈ 1:2:N
        # 体对角线: 1/6 × 1/√3 = √3/18
        negative -= √3/18 / n₁
        n₁² = n₁^2
        for n₂ ∈ n₁+2:2:N
            n₂² = n₂^2
            AB = n₁² + n₂²
            # 在三棱锥面上的原子, 1/2
            negative -= 1/2 / √(AB + n₁²)  # x = y
            negative -= 1/2 / √(AB + n₂²)  # y = z
            # 三棱锥内部的原子
            for n₃ ∈ n₂+2:2:N
                negative -= 1 / √(AB + n₃^2)
            end
        end
    end
    for n₁ ∈ 2:2:N-2
        # 坐标轴上: 1/8
        # 面对角线: 1/4 × 1/√2 = √2/8
        # 体对角线: 1/6 × 1/√3 = √3/18
        n₁² = n₁^2
        positive += (1/8 + √2/8 + √3/18) / n₁
        positive += 1/8 / √(2N² + n₁²)  # x = N, y = N
        positive += 1/4 / √(N² + 2n₁²)  # x = N, y = z
        positive += 1/4 / √(N² + n₁²)   # x = N, z = 0
        for n₂ ∈ n₁+2:2:N-2
            n₂² = n₂^2
            AB = n₁² + n₂²
            # 在三棱锥面上的原子, 1/2
            positive += 1/2 / √(AB)        # z = 0
            positive += 1/2 / √(AB + N²)   # x = N
            positive += 1/2 / √(AB + n₁²)  # x = y
            positive += 1/2 / √(AB + n₂²)  # y = z
            # 三棱锥内部的原子
            for n₃ ∈ n₂+2:2:N-2
                positive += 1 / √(AB + n₃^2)
            end
        end
    end
    positive += (1 + √2/2 + √3/9)/16N
    return -48(negative + positive)
end

function test(Madelung)
    for n₁ in 2:2:10
        println("$n₁\t=>\t$(Madelung(n₁))")
    end
    n₁ = 1000
    while n₁ < 3000
        @time println("$n₁\t=>\t$(Madelung(n₁))")
        n₁ <<= 1
    end
end

test(NaCl48)
test(CsCl48)

# 计算结果
"""
2   =>  1.751769133336938
4   =>  1.7477211096310752
6   =>  1.7475955168854718
8   =>  1.747574381725519
10  =>  1.7475686037718035
1000    =>  1.7475645941383142
  0.705376 seconds (16 allocations: 560 bytes)
2000    =>  1.7475645924003231
  5.504847 seconds (16 allocations: 560 bytes)
2   =>  1.7694668471423713
4   =>  1.7911720212677862
6   =>  1.7977509679898471
8   =>  1.8000773468837608
10  =>  1.8011566188366785
1000    =>  1.8030793477082625
  0.171566 seconds (16 allocations: 560 bytes)
2000    =>  1.8030744069255888
  1.347095 seconds (17 allocations: 960 bytes)
[Finished in 8.3s]
"""